---
title: "Untitled"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(readxl)
library(purrr)
library(stringr)
```


```{r}
all_raw <- read_excel("data/ข้อมูลการมาตรวจแต่ละครั้ง_รวม 4 มิย 2568.xlsx")
other_raw <- read_excel("data/ข้อมูลการมาตรวจแต่ละครั้ง_อ.สิทธิชัย.xlsx")
new_data <- read_csv("data/new_data.csv")


sample_raw <- read_csv("sample_data.csv")
```


```{r}
# recolname

colnames(sample_raw)

colnames_map <- c("HN" = "hn",
                  "ครั้งที่มาตรวจ" = "visit_number",
                  "วันที่มาตรวจ" = "visit_date",
                  "สิ่งผิดปกติที่อยากบอก" = "patient_note",
                  "แน่นหน้าอกตรงกลาง" = "chest_tightness",
                  "ระบบประสาทผิดปกติ" = "nervous_system",
                  "ปัสสาวะผิดปกติ" = "urinal_abnormal",
                  "ปวดหัว" = "headache",
                  "เวียนหัว" = "dizziness",
                  "หอบเหนื่อย" = "dypsnea",
                  "ขาบวม" = "leg_swelling",
                  "บวมที่ใบหน้า" = "face_swelling",
                  "CC" = "cc",
                  "PI" = "pi",
                  "SBP" = "bp_sys",
                  "DBP" = "bp_dia",
                  "PR" = "pulse",
                  "waist circum" = "waist",
                  "BW" = "weight",
                  "Height" = "height",
                  "HEENT" = "heent",
                  "Heart" = "heart",
                  "Lung" = "lungs",
                  "Abdomen" = "abd",
                  "Ext" = "ext",
                  "N/S" = "ns",
                  "Na" = "na",
                  "HbA1C" = "hba1c",
                  "BS" = "fbs",
                  "Chol" = "cho",
                  "LDL" = "ldl",
                  "TG" = "tg",
                  "HDL" = "hdl",
                  "นัดครั้งต่อไป" = "follow_up_date",
                  "คะแนนควบคุมBP" = "bp_control_score",
                  "คะแนนควบคุมน้ำหนัก" = "weight_control_score",
                  "คะแนนพฤติกรรมดูแลตนเอง" = "self_care_score",
                  "คะแนนวัดBPที่บ้าน" = "home_bp_score",
                  "HBPMตามเป้า" = "hbpm_target",
                  "Diuretics" = "diuretics",
                  "ACEIs" = "aceis",
                  "ARBs" = "arbs",
                  "CCBs" = "ccbs"
                  )
```


```{r}
colnames(all_raw) <- ifelse(colnames(all_raw) %in% names(colnames_map), colnames_map[colnames(all_raw)], colnames(all_raw))
```




```{r}
# change บ่อยครั้ง นานๆครั้ง ไม่มี

cols_to_replace <- c("chest_tightness", "nervous_system", "urinal_abnormal",
                     "headache", "dizziness", "dypsnea", "leg_swelling",
                     "face_swelling" )
new_data <- new_data %>%
  mutate(across(all_of(cols_to_replace), ~ recode(., 
                                              "ไม่มี" = "no", 
                                              "นานๆครั้ง" = "sometimes", 
                                              "บ่อยครั้ง" = "often")))

# Need to regret data
# Columns to clean
cols_to_clean <- c("chest_tightness", "nervous_system", "urinal_abnormal",
                   "headache", "dizziness", "dypsnea", "leg_swelling", "face_swelling")

# Define standard replacements
dict <- c("ไม่มี" = "no",
          "ไม่มีไม่มี" = "no",
          "ไม่มีไม่" = "no",
          "ไม่มีv" = "no",
          "ไม่มีอ" = "no",
          "v" = "no",
          "นานๆครั้ง" = "sometimes",
          "นานครั้ง" = "sometimes",
          "บ่อยครั้ง" = "often",
          "ไไม่มี" = "no",
          "2-3 ครั้งต" = "sometimes",
          "นานครั้ง เ" = "sometimes",
          "อ" = "no",
          "ไม่u" = "no",
          "ไม่มีล" = "no",
          "ไม่มีไ" = "no",
          "ออไม่ม" = "no",
          "vvไม่ม" = "no",
          "บ่อยครั้งส" = "sometimes",
          "มี" = "sometimes",
          "v" = "no"
          )

new_data <- new_data %>%
  mutate(across(all_of(cols_to_clean), ~ .x |> 
                  str_replace_all("[\r\n\\\\]", "") |>  # remove \r \n \\ etc.
                  str_trim() |>                          # remove leading/trailing spaces
                  str_replace_all("ไม่มี+", "ไม่มี") |>  # multiple ไม่มี → ไม่มี
                  str_replace_all("นานๆครั้ง", "นานๆครั้ง") |>  # standardize if needed
                  str_replace_all("บ่อยครั้ง", "บ่อยครั้ง") |>
                  recode(!!!dict)                         # apply translation
  ))




```

```{r}
# check unique 


cols_to_check <- c("chest_tightness", "nervous_system", "urinal_abnormal",
                   "headache", "dizziness", "dypsnea", "leg_swelling",
                   "face_swelling")

cols_to_check <- c("heent","heart","lungs","abd", "ext", "ns")

# Show unique values in each specified column
new_data %>%
  select(all_of(cols_to_check)) %>%
  map(unique)
```


```{r}
# change cc


new_data <- new_data %>%
  mutate(
    cc_early_visit = if_else(str_starts(cc, "มาก่อนนัด"), 
                             str_extract(cc, "(?<=เพราะ).*"), 
                             NA_character_),
    cc_late_visit = if_else(str_starts(cc, "มาหลังนัด"), 
                            str_extract(cc, "(?<=เพราะ).*"), 
                            NA_character_),
    cc = case_when(
      str_trim(cc) == "มาตรวจตามนัด" ~ "follow_up",
      str_starts(cc, "มาก่อนนัด") ~ "early_visit",
      str_starts(cc, "มาหลังนัด") ~ "late_visit",
      TRUE ~ cc
    )
  )

unique(new_data$cc)
unique(new_data$cc_early_visit)

```

```{r}
# change pi

# Define what counts as "normal" based on keywords
normal_keywords <- c("ปกติ", "สบายดี", "ทั่วไปดีขึ้น", "อาการอื่นปกติ", "stable", "ปกตอิดี",
                     "clinical  well being")
manual_other_values <- c("ญาติมารับยาแทน", "ต้องการมารักษา", "สอบถามเรื่องผลตรวจ",
                         "ญาติมา","ไม่มี", "คุมอาหารได้ดี บันทึกความดันที่บ้าน BP ดีบางครั้งต่",
                         "หลังนอนรพ. 1 สัปดาหืที่ผ่านมา ปรับยาและให้เครื่องว",
                         "ไม่บวม", "อากาอื่นดี แต่เป็นหวัด","ถอนฟัน 2 ซี่เมื่อวาน เจ็บเล็กน้อย",
                         "สบาดีวัด BP ที่บ้านให้ลูกมารับยา", "มาฟังผลตรวจเลือด",
                         "แผลที่เท้าหาย", "ปวดหัวหายแล้ว",
                         "ปวดข้อดีขึ้น อาหารคุมได้ ออกกำลังกายโดยการเดินแกว่",
                         "ไม่ทราบ"
                         )

new_data <- new_data %>%
  mutate(
    pi_class = case_when(
      str_trim(pi) %in% manual_other_values ~ "other",
      str_detect(pi, str_c(normal_keywords, collapse = "|")) ~ "normal",
      TRUE ~ "abnormal"
    ),
    
    pi_other = if_else(pi_class == "other", pi, NA_character_),
    pi_abnormal = if_else(pi_class == "abnormal", pi, NA_character_),
    pi = pi_class
  ) %>%
  select(-pi_class)

unique(new_data$pi)
```




```{r}
# Columns to process
exam_cols <- c("heent", "heart", "lungs", "abd", "ext", "ns")

# Define WNL pattern (case-insensitive)
wnl_pattern <- regex("wnl", ignore_case = TRUE)

new_data <- new_data %>%
  # Step 1: create abnormal flag columns
  mutate(across(all_of(exam_cols), 
                .fns = ~ if_else(str_detect(., wnl_pattern), NA_character_, .),
                .names = "{.col}_abnormal")) %>%
  
  # Step 2: overwrite original columns with "wnl"/"abnormal"
  mutate(across(all_of(exam_cols),
                .fns = ~ if_else(str_detect(., wnl_pattern), "wnl", "abnormal")))
```


```{r}
# write csv
# write_csv(all_raw, "data/new_data.csv")

# save csv
write_csv(new_data, "data/new_data.csv")
```





```{r}
sample_raw |> filter(
  hn == "BA7547"
)

visit_data |> filter(
  hn == "BA7547"
)
```


```{r}
# join data

visit_data <- read_csv("visit_data.csv")
# 1. Keep only matching columns
common_cols <- intersect(names(visit_data), names(new_data))
new_data_clean <- new_data[, common_cols]

# 2. Match column types
for (col in common_cols) {
  target_type <- class(visit_data[[col]])[1]
  new_type <- class(new_data_clean[[col]])[1]
  
  if (new_type != target_type) {
    if (target_type == "integer") {
      new_data_clean[[col]] <- as.integer(new_data_clean[[col]])
    } else if (target_type == "numeric") {
      new_data_clean[[col]] <- as.numeric(new_data_clean[[col]])
    } else if (target_type == "character") {
      new_data_clean[[col]] <- as.character(new_data_clean[[col]])
    } else if (target_type == "logical") {
      new_data_clean[[col]] <- as.logical(new_data_clean[[col]])
    } else if (target_type == "factor") {
      new_data_clean[[col]] <- as.factor(new_data_clean[[col]])
    }
  }
}

# 3. Now safely append
visit_data <- dplyr::bind_rows(visit_data, new_data_clean)

# save csv
write_csv(visit_data, "visit_data.csv")

```



```{r}
# Step 1: Read the data
visit_data <- read_csv("visit_data.csv", na = c("", "NA"))

# Step 2: Remove rows where all values are NA
cleaned_data <- visit_data %>% filter(!if_all(everything(), is.na))

# Step 3: Overwrite the original file (or change to "clean_visit_data.csv" if you want to keep the original)
write_csv(cleaned_data, "visit_data.csv")
```


```{r}
visit_data <- visit_data %>%
  arrange(visit_date)

# Define regex for valid HN: two letters + four digits
valid_hn_pattern <- "^[A-Za-z]{2}[0-9]{4}$"

# Filter rows with invalid HN
invalid_hn <- visit_data %>%
  filter(!str_detect(hn, valid_hn_pattern))

# View problematic values
unique(invalid_hn$hn)


miss_hn <- c("ฉ็5654", "ฌณ6271", "ER", "ฎํ6185", "ฌ?4062", "ฤ?0752", "ฌ์8637", "K2238", "K5742", "E6599")

visit_data %>%
  filter(hn %in% miss_hn)
```

```{r}
# ฌณ6271 -> GI6271 delete
# ฌ?4062 -> G?4062 ->
# K2238 -> delete
# ฉ็5654-> CH5654
# ฎํ6185 -> delete
# K5742
# E6599 -> EK6599
# ฌ์8637-> GN8637. need to fix
# ฤ?0752 -> A?0752 -> AM 0752 need to fix


delete_data <- c("ฌณ6271","K2238", "ฎํ6185", "ER",
                 "ฌ?4062", "ฉ็565", "K5742", "E6599")
visit_data <- visit_data %>% 
  filter(!hn %in% delete_data)

visit_data <- visit_data %>%
  mutate(hn = recode(hn,
                     "ฌ์8637" = "GN8637",
                     "ฤ?0752" = "AM0752"))

# re number of visit
visit_data <- visit_data %>%
  arrange(hn, visit_date) %>%
  group_by(hn) %>%
  mutate(visit_number = row_number()) %>%
  ungroup()


```

